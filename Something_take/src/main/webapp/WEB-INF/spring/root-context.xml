<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	<!-- Root Context: defines shared resources visible to all other web components -->
		
	<!-- 1. DB연결 객체 생성 -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> 
	<!-- class="Library명" -->
	
	<!--  /////////////////////////////////////////////////////////////////////////////////////  -->
	
	<!-- 11. jdbc 사용할 때, 정보를 쉽게 보여주는 로그 라이브러리 추가 후  dataSource를 변경한다. -->
	<!--  => log4jdbc 적용 -->		
			<!-- 드라이버 -->
<!-- 			<property name="driverClassName">
				<value>net.sf.log4jdbc.sql.jdbcapi.DriverSpy</value>
			</property> 
			주소
			<property name="url" value="jdbc:log4jdbc:mysql://localhost:3306/springdb?useSSL=false" />
 -->		
	<!--  /////////////////////////////////////////////////////////////////////////////////////  -->
				
			<!-- 2. 드라이버 연결 정보 입력 -->
			<!-- 드라이버 -->
			<property name="driverClassName">
				<value>com.mysql.jdbc.Driver</value>
			</property>
			
			<!-- 주소 
			<property name="url" value="jdbc:mysql://3.23.185.192:3306/something_take?useSSL=false" />
			<property name="url" value="jdbc:mysql://something-take.czwf30dbx2fs.us-east-2.rds.amazonaws.com:3306/something_take?useSSL=false" />
			<property name="url" value="jdbc:mysql://localhost:3306/something_take?useSSL=false" />
			-->
			<property name="url" value="jdbc:mysql://something-take.cqjlktrtdmd1.ap-northeast-2.rds.amazonaws.com:3306/something_take?useSSL=false" />
			
			<!-- 아이디 
			<property name="username" value="something_take" />
			-->			
			<property name="username" value="admin" />
			
			<!-- 비밀번호 
			<property name="password" value="1234" />
			-->
			<property name="password" value="kimhk0489" />
	</bean>
			
	<!-- 3. DataSourceTest.java파일 생성 -->
	
	<!-- 4. MyBatis를 연결하기 위한 SqlSessionFactory객체 생성 -->
	<!-- -> Connection객체를 생성하고, DB연결도 처리하며, SQL쿼리 구문을 실행시키는 역할을 한다. -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	<!-- => SqlSessionFactoryBean sqlSessionFactory = new  SqlSessionFactoryBean();과 같은 문법 -->
	
		<property name="dataSource" ref="dataSource"></property>
		<!-- => 2번 드라이버 연결 객체 정보를 주입하는 것이다. -->
		
		<!--  5. MyBatis 설정값을 추가한다. -->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		
		<!--  6. src/main/resources/mybatis-config.xml파일 생성하여 configuration 태그 작업 후 5번 입력 -->
		
		<!--  7. src/test/java/MyBatisTest.java 생성 후 작업 -->
		
		<!--  /////////////////////////////////////////////////////////////////////////////////////  -->
		
		<!--  8. Mapper의 정보를 연결 -->
		<property name="mapperLocations" value="classpath:mappers/**/*Mapper.xml" />
		
	</bean>
		
		<!--  9. SqlSession인터페이스를 구현한 SqlSessionTemplate객체 생성 
		- SqlSessionTemplate객체는 DB연결, 자원 해제를 처리하는 객체이다. (SqlSession인터페이스를 구현하고 있다)
		- mybatis-spring라이브러리안에 포함되어있다. -->
		
		<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
	     <!-- destroy-method="clearCache" 자원해제를 하는 속성 -->
			
			<!-- 생성자 -->
			<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
		
		</bean>
		
		<!-- 10. MemberDAOImpl.java와 DB 연결 
			root-context.xml과 com.itwillbs.persistence 패키지를 연결하여 스프링에 등록 -->
		<context:component-scan base-package="com.company.persistence" />
		
		<!--  /////////////////////////////////////////////////////////////////////////////////////  -->
		
		<!-- 12. MebmerServiceImpl.java와 연결한다. -->
		<context:component-scan base-package="com.company.service" />
		
		<!--  /////////////////////////////////////////////////////////////////////////////////////  -->
		
		<!-- google email -->
		<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		    <property name="host" value="smtp.gmail.com" />
		    <property name="port" value="587" />
		    <property name="username" value="gyrud6744@gmail.com" />
		    <!-- <property name="password" value="busy1260@" /> 
		    <property name="password" value="vucwqyzsicadggwo" />
		    -->
		    <property name="password" value="mnmmnqykalyqfqsx" />
		    <property name="javaMailProperties">
		        <props>
		            <prop key="mail.transport.protocol">smtp</prop>
		            <prop key="mail.smtp.auth">true</prop>
		            <prop key="mail.smtp.starttls.enable">true</prop>
		            <prop key="mail.debug">true</prop>
		        </props>
		    </property>
		</bean>
		<!-- google email -->
		
</beans>