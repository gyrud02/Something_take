<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
	< member 테이블 관련 SQL 구문만 처리한다. > 
		1. DTD가져오기 [#2번]
		https://mybatis.org/mybatis-3/ko/getting-started.html
		매핑된 SQL 구문 살펴보기
-->

<!-- namespace : 외부에서 해당 파일을 구분할 수 있도록 하는 값 -->
<mapper namespace="com.company.mapper.MemberMapper">

	<!-- 회원가입  -->	
	<insert id="signUp">
	<![CDATA[
	INSERT INTO member(email, pwd, name, phone)
	VALUES (#{email}, #{pwd}, #{name}, #{phone})
	]]>
	</insert>
	<!-- 회원가입  -->	

	<!-- ID에 맞는 회원 정보 가져오기 -->
	<select id="getMem" resultType="com.company.domain.MemberVO">
	<![CDATA[
	SELECT name
	FROM member
	WHERE email = #{email}
	]]>
	</select>
	<!-- ID에 맞는 회원 정보 가져오기 -->

	<!-- 로그인 -->
	<select id="signIn" resultType="com.company.domain.MemberVO">
	<![CDATA[
	SELECT email, pwd 
	FROM member
	WHERE email = #{email}
	AND pwd = #{pwd}
	]]>
	</select>
	<!-- 로그인 -->

	<!-- 회원 정보 수정 -->
	<update id="modify">
	<![CDATA[
	UPDATE member
	SET pwd = #{pwd}, rev_date = now()
	WHERE email = #{email}
	]]>
	</update>
	<!-- 회원 정보 수정 -->

	<!-- 회원탈퇴 -->
	<delete id="dropOut">
	DELETE FROM member
	WHERE email = #{email}
	AND pwd = #{pwd}
	</delete>
	<!-- 회원탈퇴 -->
	
	<!-- 비밀번호 찾기 -->
	<select id="getPassword" resultType="String">
	<![CDATA[
	SELECT pwd
	FROM member
	WHERE email = #{email}
	]]>
	</select>

	<!-- 멤버십 정보 조회 -->
	<select id="getMembership" resultType="com.company.domain.MemberVO">
	<![CDATA[ 
	SELECT membership_type, membership_reg_date, membership_end_date, membership_pay
	FROM member
	WHERE email = #{email}
	]]>
	</select>
	<!-- 멤버십 정보 조회 -->
	
	<!-- [관리자] 회원 정보 전체 조회 -->
	<select id="getMembers" resultType="com.company.domain.MemberVO">
	SELECT idx, email, reg_date, membership_type, membership_reg_date, membership_end_date
	FROM member
	</select>
	<!-- [관리자] 회원 정보 전체 조회 -->
	
	<!-- 이메일 중복 체크 -->
	<select id="duplicate" resultType="int">
	SELECT count(*)
	FROM member
	WHERE email = #{email}
	</select>
	<!-- 이메일 중복 체크 -->
	
	<!-- 결제 테이블 insert -->
	<update id="payment">
	UPDATE member
	SET membership_type = #{membership_type}, 
		membership_reg_date = now(), 
		membership_end_date = now() + INTERVAL +1 MONTH,
		membership_pay = #{membership_pay}
	WHERE email = #{email}
	</update>
	<!-- 결제 테이블 insert -->

</mapper>